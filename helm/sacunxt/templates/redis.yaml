{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sacunxt.fullname" . }}-redis
  namespace: {{ include "sacunxt.namespace" . }}
  labels:
    {{- include "sacunxt.service.labels" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" "redis") | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "sacunxt.service.selectorLabels" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" "redis") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "sacunxt.service.selectorLabels" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" "redis") | nindent 8 }}
    spec:
      {{- include "sacunxt.podSecurityContext" . | nindent 6 }}
      {{- include "sacunxt.imagePullSecrets" . | nindent 6 }}
      {{- include "sacunxt.nodeSelector" . | nindent 6 }}
      {{- include "sacunxt.tolerations" . | nindent 6 }}
      {{- include "sacunxt.affinity" . | nindent 6 }}
      containers:
        - name: redis
          image: redis:7-alpine
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - name: redis
              containerPort: {{ .Values.redis.service.ports.redis }}
              protocol: TCP
          {{- if not .Values.redis.auth.enabled }}
          command:
            - redis-server
            - --appendonly
            - "no"
            - --save
            - ""
          {{- else }}
          env:
            - name: REDIS_PASSWORD
              value: {{ .Values.redis.auth.password | quote }}
          command:
            - redis-server
            - --requirepass
            - $(REDIS_PASSWORD)
            - --appendonly
            - "no"
            - --save
            - ""
          {{- end }}
          {{- with .Values.redis.master.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.redis.service.ports.redis }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: {{ .Values.redis.service.ports.redis }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          {{- if .Values.redis.master.persistence.enabled }}
          volumeMounts:
            - name: redis-data
              mountPath: /data
            {{- include "sacunxt.volumeMounts" . | nindent 12 }}
          {{- else }}
          {{- with .Values.extraVolumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- include "sacunxt.securityContext" . | nindent 10 }}
      {{- if .Values.redis.master.persistence.enabled }}
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: {{ include "sacunxt.fullname" . }}-redis-pvc
        {{- include "sacunxt.volumes" . | nindent 8 }}
      {{- else }}
      {{- include "sacunxt.volumes" . | nindent 6 }}
      {{- end }}
---
{{- if .Values.redis.master.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "sacunxt.fullname" . }}-redis-pvc
  namespace: {{ include "sacunxt.namespace" . }}
  labels:
    {{- include "sacunxt.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ include "sacunxt.storageClass" . }}
  resources:
    requests:
      storage: {{ .Values.redis.master.persistence.size }}
---
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: {{ include "sacunxt.namespace" . }}
  labels:
    {{- include "sacunxt.service.labels" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" "redis") | nindent 4 }}
spec:
  type: ClusterIP
  selector:
    {{- include "sacunxt.service.selectorLabels" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" "redis") | nindent 4 }}
  ports:
    - name: redis
      port: {{ .Values.redis.service.ports.redis }}
      targetPort: {{ .Values.redis.service.ports.redis }}
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "sacunxt.fullname" . }}-redis-headless
  namespace: {{ include "sacunxt.namespace" . }}
  labels:
    {{- include "sacunxt.service.labels" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" "redis") | nindent 4 }}
spec:
  clusterIP: None
  selector:
    {{- include "sacunxt.service.selectorLabels" (dict "Chart" .Chart "Release" .Release "Values" .Values "component" "redis") | nindent 4 }}
  ports:
    - name: redis
      port: {{ .Values.redis.service.ports.redis }}
      targetPort: {{ .Values.redis.service.ports.redis }}
      protocol: TCP
{{- end }}
