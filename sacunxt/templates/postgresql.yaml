{{- if .Values.postgresql.enabled }}
apiVersion: v1
kind: Namespace
metadata:
  name: database
  labels:
    app.kubernetes.io/name: {{ include "sacunxt.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "sacunxt.fullname" . }}-postgresql-headless
  namespace: database
  labels:
    app.kubernetes.io/name: {{ include "sacunxt.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: postgresql
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: {{ include "sacunxt.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: postgresql
  ports:
    - name: postgresql
      port: {{ .Values.postgresql.service.ports.postgresql }}
      targetPort: {{ .Values.postgresql.service.ports.postgresql }}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: database
  labels:
    app.kubernetes.io/name: {{ include "sacunxt.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: postgresql
spec:
  selector:
    app.kubernetes.io/name: {{ include "sacunxt.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: postgresql
  ports:
    - name: postgresql
      port: {{ .Values.postgresql.service.ports.postgresql }}
      targetPort: {{ .Values.postgresql.service.ports.postgresql }}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-proxy
  namespace: {{ include "sacunxt.namespace" . }}
  labels:
    app.kubernetes.io/name: {{ include "sacunxt.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: postgresql-proxy
spec:
  type: ExternalName
  externalName: postgres-service.database.svc.cluster.local
  ports:
    - name: postgresql
      port: {{ .Values.postgresql.service.ports.postgresql }}
      targetPort: {{ .Values.postgresql.service.ports.postgresql }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "sacunxt.fullname" . }}-postgresql
  namespace: database
  labels:
    app.kubernetes.io/name: {{ include "sacunxt.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: postgresql
spec:
  serviceName: {{ include "sacunxt.fullname" . }}-postgresql-headless
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "sacunxt.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: postgresql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "sacunxt.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: postgresql
    spec:
      securityContext:
        runAsUser: 0
        fsGroup: 0
      containers:
        - name: postgresql
          image: postgres:15-alpine
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - name: postgresql
              containerPort: {{ .Values.postgresql.service.ports.postgresql }}
              protocol: TCP
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.auth.password | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database | quote }}
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          {{- with .Values.postgresql.primary.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          securityContext:
            runAsUser: 0
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
        labels:
          app.kubernetes.io/name: {{ include "sacunxt.name" . }}
          app.kubernetes.io/instance: {{ .Release.Name }}
      spec:
        accessModes: 
          - ReadWriteOnce
        storageClassName: {{ .Values.postgresql.primary.persistence.storageClass | default "standard" }}
        resources:
          requests:
            storage: {{ .Values.postgresql.primary.persistence.size }}
{{- end }}
